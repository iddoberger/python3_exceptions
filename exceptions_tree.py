from graphviz import Digraph

dot = Digraph()

dot.edge("BaseException", "SystemExit")
dot.edge("BaseException", "KeyboardInterrupt")
dot.edge("BaseException", "GeneratorExit")
dot.edge("BaseException", "Exception")
dot.edge("Exception", "StopIteration")
dot.edge("Exception", "StopAsyncIteration")
dot.edge("Exception", "ArithmeticError")
dot.edge("ArithmeticError", "FloatingPointError")
dot.edge("ArithmeticError", "OverflowError")
dot.edge("ArithmeticError", "ZeroDivisionError")
dot.edge("Exception", "AssertionError")
dot.edge("Exception", "AttributeError")
dot.edge("Exception", "BufferError")
dot.edge("Exception", "EOFError")
dot.edge("Exception", "ImportError")
dot.edge("ImportError", "ModuleNotFoundError")
dot.edge("Exception", "LookupError")
dot.edge("LookupError", "IndexError")
dot.edge("LookupError", "KeyError")
dot.edge("Exception", "MemoryError")
dot.edge("Exception", "NameError")
dot.edge("NameError", "UnboundLocalError")
dot.edge("Exception", "OSError")
dot.edge("OSError", "BlockingIOError")
dot.edge("OSError", "ChildProcessError")
dot.edge("OSError", "ConnectionError")
dot.edge("ConnectionError", "BrokenPipeError")
dot.edge("ConnectionError", "ConnectionAbortedError")
dot.edge("ConnectionError", "ConnectionRefusedError")
dot.edge("ConnectionError", "ConnectionResetError")
dot.edge("OSError", "FileExistsError")
dot.edge("OSError", "FileNotFoundError")
dot.edge("OSError", "InterruptedError")
dot.edge("OSError", "IsADirectoryError")
dot.edge("OSError", "NotADirectoryError")
dot.edge("OSError", "PermissionError")
dot.edge("OSError", "ProcessLookupError")
dot.edge("OSError", "TimeoutError")
dot.edge("Exception", "ReferenceError")
dot.edge("Exception", "RuntimeError")
dot.edge("RuntimeError", "NotImplementedError")
dot.edge("RuntimeError", "RecursionError")
dot.edge("Exception", "SyntaxError")
dot.edge("SyntaxError", "IndentationError")
dot.edge("SyntaxError", "TabError")
dot.edge("Exception", "SystemError")
dot.edge("Exception", "TypeError")
dot.edge("Exception", "ValueError")
dot.edge("ValueError", "UnicodeError")
dot.edge("UnicodeError", "UnicodeDecodeError")
dot.edge("UnicodeError", "UnicodeEncodeError")
dot.edge("UnicodeError", "UnicodeTranslateError")

dot_source = dot.source

with open("exceptions.dot", "w") as dot_file:
    dot_file.write(dot_source)
